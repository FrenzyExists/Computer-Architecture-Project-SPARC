$date
	Thu May 25 22:35:21 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module sparc_fantastica $end
$var wire 32 ! ALU_OUT [31:0] $end
$var wire 32 " MEM_ALU_OUT_Address [31:0] $end
$var wire 32 # MEM_Data_IN_PD [31:0] $end
$var wire 32 $ MEM_OUT [31:0] $end
$var wire 3 % MEM_Output_Handler [2:0] $end
$var wire 1 & PC_nPC_LE $end
$var wire 32 ' WB_OUT [31:0] $end
$var wire 32 ( WB_RD_BACK [31:0] $end
$var wire 1 ) cond_branch_OUT $end
$var wire 5 * rs2 [4:0] $end
$var wire 5 + rs1 [4:0] $end
$var wire 5 , rd [4:0] $end
$var wire 32 - pd [31:0] $end
$var wire 32 . pb [31:0] $end
$var wire 32 / pa [31:0] $end
$var wire 32 0 nPC [31:0] $end
$var wire 32 1 instruction_out [31:0] $end
$var wire 32 2 instruction [31:0] $end
$var wire 2 3 forwardPC [1:0] $end
$var wire 2 4 forwardOutputHandler [1:0] $end
$var wire 2 5 forwardMX3 [1:0] $end
$var wire 2 6 forwardMX2 [1:0] $end
$var wire 2 7 forwardMX1 [1:0] $end
$var wire 4 8 cond [3:0] $end
$var wire 1 9 WB_Register_File_Enable $end
$var wire 5 : RD_WB [4:0] $end
$var wire 5 ; RD_MEM [4:0] $end
$var wire 5 < RD_EX [4:0] $end
$var wire 32 = PC_MEM [31:0] $end
$var wire 32 > PC_ID [31:0] $end
$var wire 32 ? PC_EX [31:0] $end
$var wire 32 @ PC [31:0] $end
$var wire 3 A OutputHandlerInstructions [2:0] $end
$var wire 1 B MEM_CU $end
$var wire 4 C IS [3:0] $end
$var wire 1 D IF_ID_LE $end
$var wire 1 E ID_branch_instr $end
$var wire 32 F ID_MX3 [31:0] $end
$var wire 32 G ID_MX2 [31:0] $end
$var wire 32 H ID_MX1 [31:0] $end
$var wire 22 I ID_Imm22 [21:0] $end
$var wire 18 J ID_CU [17:0] $end
$var wire 1 K I29_branch_instr $end
$var wire 30 L I29_0 [29:0] $end
$var wire 22 M EX_Imm22 [21:0] $end
$var wire 9 N EX_CU [8:0] $end
$var wire 32 O DataMemory_OUT [31:0] $end
$var wire 5 P DataMemInstructions [4:0] $end
$var wire 19 Q CU_SIG [18:0] $end
$var wire 1 R CC_Enable $end
$var wire 4 S ALU_OP [3:0] $end
$var reg 8 T Addr [7:0] $end
$var reg 5 U RD_ID [4:0] $end
$var reg 1 V S $end
$var reg 32 W TA [31:0] $end
$var reg 1 X clk $end
$var reg 1 Y clr $end
$var reg 8 Z data [7:0] $end
$var reg 1 [ reset $end
$var integer 32 \ code [31:0] $end
$var integer 32 ] fi [31:0] $end
$scope module CU $end
$var wire 1 X clk $end
$var wire 1 Y clr $end
$var wire 19 ^ instr_signals [18:0] $end
$var wire 32 _ instr [31:0] $end
$var reg 1 ` CC_Enable $end
$var reg 1 a I13 $end
$var reg 1 b I24 $end
$var reg 1 c I30 $end
$var reg 1 d I31 $end
$var reg 4 e ID_ALU_OP_instr [3:0] $end
$var reg 1 f ID_branch_instr $end
$var reg 1 g ID_call_instr $end
$var reg 1 h ID_data_mem_Enable $end
$var reg 1 i ID_data_mem_RW $end
$var reg 1 j ID_data_mem_SE $end
$var reg 2 k ID_data_mem_Size [1:0] $end
$var reg 1 l ID_jmpl_instr $end
$var reg 1 m ID_load_instr $end
$var reg 1 n ID_register_file_Enable $end
$var reg 2 o instr_op [1:0] $end
$var reg 3 p is_sethi [2:0] $end
$var reg 6 q op3 [5:0] $end
$upscope $end
$scope module CU_MUX $end
$var wire 1 V S $end
$var wire 19 r cu_in_mux [18:0] $end
$var reg 18 s CU_SIGNALS [17:0] $end
$var reg 1 E ID_branch_instr_out $end
$upscope $end
$scope module EX_MEM $end
$var wire 32 t EX_ALU_OUT [31:0] $end
$var wire 1 X clk $end
$var wire 1 Y clr $end
$var wire 32 u PC [31:0] $end
$var wire 9 v EX_control_unit_instr [8:0] $end
$var wire 5 w EX_RD_instr [4:0] $end
$var reg 5 x Data_Mem_instructions [4:0] $end
$var reg 32 y MEM_ALU_OUT [31:0] $end
$var reg 5 z MEM_RD_instr [4:0] $end
$var reg 1 B MEM_control_unit_instr $end
$var reg 3 { Output_Handler_instructions [2:0] $end
$var reg 32 | PC_MEM [31:0] $end
$upscope $end
$scope module HAZARD $end
$var wire 1 } EX_Register_File_Enable $end
$var wire 5 ~ MEM_RD [4:0] $end
$var wire 1 B MEM_Register_File_Enable $end
$var wire 1 9 WB_Register_File_Enable $end
$var wire 5 !" WB_RD [4:0] $end
$var wire 5 "" ID_rs2 [4:0] $end
$var wire 5 #" ID_rs1 [4:0] $end
$var wire 5 $" ID_rd [4:0] $end
$var wire 5 %" EX_RD [4:0] $end
$var reg 1 &" CU_S $end
$var reg 1 D IF_ID_LE $end
$var reg 1 '" PC_LE $end
$var reg 2 (" forwardMX1 [1:0] $end
$var reg 2 )" forwardMX2 [1:0] $end
$var reg 2 *" forwardMX3 [1:0] $end
$var reg 1 +" nPC_LE $end
$upscope $end
$scope module ID_EX $end
$var wire 32 ," ID_MX1 [31:0] $end
$var wire 32 -" ID_MX2 [31:0] $end
$var wire 32 ." ID_MX3 [31:0] $end
$var wire 5 /" ID_RD_instr [4:0] $end
$var wire 18 0" ID_control_unit_instr [17:0] $end
$var wire 1 X clk $end
$var wire 1 Y clr $end
$var wire 32 1" PC [31:0] $end
$var wire 22 2" Imm22 [21:0] $end
$var reg 4 3" EX_ALU_OP_instr [3:0] $end
$var reg 1 R EX_CC_Enable_instr $end
$var reg 4 4" EX_IS_instr [3:0] $end
$var reg 22 5" EX_Imm22 [21:0] $end
$var reg 32 6" EX_MX1 [31:0] $end
$var reg 32 7" EX_MX2 [31:0] $end
$var reg 32 8" EX_MX3 [31:0] $end
$var reg 5 9" EX_RD_instr [4:0] $end
$var reg 9 :" EX_control_unit_instr [8:0] $end
$var reg 32 ;" PC_EX [31:0] $end
$upscope $end
$scope module IF_ID $end
$var wire 1 D LE $end
$var wire 1 X clk $end
$var wire 1 Y clr $end
$var wire 1 [ reset $end
$var wire 32 <" instruction [31:0] $end
$var wire 32 =" PC [31:0] $end
$var reg 5 >" I18_14 [4:0] $end
$var reg 22 ?" I21_0 [21:0] $end
$var reg 4 @" I28_25 [3:0] $end
$var reg 30 A" I29_0 [29:0] $end
$var reg 5 B" I29_25 [4:0] $end
$var reg 1 K I29_branch_instr $end
$var reg 5 C" I4_0 [4:0] $end
$var reg 32 D" PC_ID_out [31:0] $end
$var reg 32 E" instruction_out [31:0] $end
$upscope $end
$scope module MEM_MUX $end
$var wire 32 F" I1 [31:0] $end
$var wire 32 G" I2 [31:0] $end
$var wire 32 H" I3 [31:0] $end
$var wire 2 I" S [1:0] $end
$var wire 32 J" I0 [31:0] $end
$var reg 32 K" Y [31:0] $end
$upscope $end
$scope module MEM_WB $end
$var wire 5 L" MEM_RD_instr [4:0] $end
$var wire 1 B MEM_control_unit_instr $end
$var wire 32 M" MUX_out [31:0] $end
$var wire 1 X clk $end
$var wire 1 Y clr $end
$var reg 5 N" WB_RD_instr [4:0] $end
$var reg 32 O" WB_RD_out [31:0] $end
$var reg 1 9 WB_Register_File_Enable $end
$upscope $end
$scope module MX1 $end
$var wire 32 P" I1 [31:0] $end
$var wire 32 Q" I2 [31:0] $end
$var wire 32 R" I3 [31:0] $end
$var wire 2 S" S [1:0] $end
$var wire 32 T" I0 [31:0] $end
$var reg 32 U" Y [31:0] $end
$upscope $end
$scope module MX2 $end
$var wire 32 V" I1 [31:0] $end
$var wire 32 W" I2 [31:0] $end
$var wire 32 X" I3 [31:0] $end
$var wire 2 Y" S [1:0] $end
$var wire 32 Z" I0 [31:0] $end
$var reg 32 [" Y [31:0] $end
$upscope $end
$scope module MX3 $end
$var wire 32 \" I1 [31:0] $end
$var wire 32 ]" I2 [31:0] $end
$var wire 32 ^" I3 [31:0] $end
$var wire 2 _" S [1:0] $end
$var wire 32 `" I0 [31:0] $end
$var reg 32 a" Y [31:0] $end
$upscope $end
$scope module PC_reg $end
$var wire 32 b" ALU_OUT [31:0] $end
$var wire 1 & LE $end
$var wire 32 c" TA [31:0] $end
$var wire 1 X clk $end
$var wire 1 Y clr $end
$var wire 32 d" nPC [31:0] $end
$var wire 2 e" mux_select [1:0] $end
$var reg 32 f" OUT [31:0] $end
$upscope $end
$scope module REG_FILE $end
$var wire 1 9 LE $end
$var wire 32 g" PW [31:0] $end
$var wire 5 h" RA [4:0] $end
$var wire 5 i" RB [4:0] $end
$var wire 5 j" RD [4:0] $end
$var wire 5 k" RW [4:0] $end
$var wire 1 X clk $end
$var wire 32 l" Q9 [31:0] $end
$var wire 32 m" Q8 [31:0] $end
$var wire 32 n" Q7 [31:0] $end
$var wire 32 o" Q6 [31:0] $end
$var wire 32 p" Q5 [31:0] $end
$var wire 32 q" Q4 [31:0] $end
$var wire 32 r" Q31 [31:0] $end
$var wire 32 s" Q30 [31:0] $end
$var wire 32 t" Q3 [31:0] $end
$var wire 32 u" Q29 [31:0] $end
$var wire 32 v" Q28 [31:0] $end
$var wire 32 w" Q27 [31:0] $end
$var wire 32 x" Q26 [31:0] $end
$var wire 32 y" Q25 [31:0] $end
$var wire 32 z" Q24 [31:0] $end
$var wire 32 {" Q23 [31:0] $end
$var wire 32 |" Q22 [31:0] $end
$var wire 32 }" Q21 [31:0] $end
$var wire 32 ~" Q20 [31:0] $end
$var wire 32 !# Q2 [31:0] $end
$var wire 32 "# Q19 [31:0] $end
$var wire 32 ## Q18 [31:0] $end
$var wire 32 $# Q17 [31:0] $end
$var wire 32 %# Q16 [31:0] $end
$var wire 32 &# Q15 [31:0] $end
$var wire 32 '# Q14 [31:0] $end
$var wire 32 (# Q13 [31:0] $end
$var wire 32 )# Q12 [31:0] $end
$var wire 32 *# Q11 [31:0] $end
$var wire 32 +# Q10 [31:0] $end
$var wire 32 ,# Q1 [31:0] $end
$var wire 32 -# Q0 [31:0] $end
$var wire 32 .# PD [31:0] $end
$var wire 32 /# PB [31:0] $end
$var wire 32 0# PA [31:0] $end
$var wire 32 1# E [31:0] $end
$scope module R0 $end
$var wire 32 2# D [31:0] $end
$var wire 1 3# Ld $end
$var wire 1 X clk $end
$var reg 32 4# Q [31:0] $end
$upscope $end
$scope module R1 $end
$var wire 32 5# D [31:0] $end
$var wire 1 6# Ld $end
$var wire 1 X clk $end
$var reg 32 7# Q [31:0] $end
$upscope $end
$scope module R10 $end
$var wire 32 8# D [31:0] $end
$var wire 1 9# Ld $end
$var wire 1 X clk $end
$var reg 32 :# Q [31:0] $end
$upscope $end
$scope module R11 $end
$var wire 32 ;# D [31:0] $end
$var wire 1 <# Ld $end
$var wire 1 X clk $end
$var reg 32 =# Q [31:0] $end
$upscope $end
$scope module R12 $end
$var wire 32 ># D [31:0] $end
$var wire 1 ?# Ld $end
$var wire 1 X clk $end
$var reg 32 @# Q [31:0] $end
$upscope $end
$scope module R13 $end
$var wire 32 A# D [31:0] $end
$var wire 1 B# Ld $end
$var wire 1 X clk $end
$var reg 32 C# Q [31:0] $end
$upscope $end
$scope module R14 $end
$var wire 32 D# D [31:0] $end
$var wire 1 E# Ld $end
$var wire 1 X clk $end
$var reg 32 F# Q [31:0] $end
$upscope $end
$scope module R15 $end
$var wire 32 G# D [31:0] $end
$var wire 1 H# Ld $end
$var wire 1 X clk $end
$var reg 32 I# Q [31:0] $end
$upscope $end
$scope module R16 $end
$var wire 32 J# D [31:0] $end
$var wire 1 K# Ld $end
$var wire 1 X clk $end
$var reg 32 L# Q [31:0] $end
$upscope $end
$scope module R17 $end
$var wire 32 M# D [31:0] $end
$var wire 1 N# Ld $end
$var wire 1 X clk $end
$var reg 32 O# Q [31:0] $end
$upscope $end
$scope module R18 $end
$var wire 32 P# D [31:0] $end
$var wire 1 Q# Ld $end
$var wire 1 X clk $end
$var reg 32 R# Q [31:0] $end
$upscope $end
$scope module R19 $end
$var wire 32 S# D [31:0] $end
$var wire 1 T# Ld $end
$var wire 1 X clk $end
$var reg 32 U# Q [31:0] $end
$upscope $end
$scope module R2 $end
$var wire 32 V# D [31:0] $end
$var wire 1 W# Ld $end
$var wire 1 X clk $end
$var reg 32 X# Q [31:0] $end
$upscope $end
$scope module R20 $end
$var wire 32 Y# D [31:0] $end
$var wire 1 Z# Ld $end
$var wire 1 X clk $end
$var reg 32 [# Q [31:0] $end
$upscope $end
$scope module R21 $end
$var wire 32 \# D [31:0] $end
$var wire 1 ]# Ld $end
$var wire 1 X clk $end
$var reg 32 ^# Q [31:0] $end
$upscope $end
$scope module R22 $end
$var wire 32 _# D [31:0] $end
$var wire 1 `# Ld $end
$var wire 1 X clk $end
$var reg 32 a# Q [31:0] $end
$upscope $end
$scope module R23 $end
$var wire 32 b# D [31:0] $end
$var wire 1 c# Ld $end
$var wire 1 X clk $end
$var reg 32 d# Q [31:0] $end
$upscope $end
$scope module R24 $end
$var wire 32 e# D [31:0] $end
$var wire 1 f# Ld $end
$var wire 1 X clk $end
$var reg 32 g# Q [31:0] $end
$upscope $end
$scope module R25 $end
$var wire 32 h# D [31:0] $end
$var wire 1 i# Ld $end
$var wire 1 X clk $end
$var reg 32 j# Q [31:0] $end
$upscope $end
$scope module R26 $end
$var wire 32 k# D [31:0] $end
$var wire 1 l# Ld $end
$var wire 1 X clk $end
$var reg 32 m# Q [31:0] $end
$upscope $end
$scope module R27 $end
$var wire 32 n# D [31:0] $end
$var wire 1 o# Ld $end
$var wire 1 X clk $end
$var reg 32 p# Q [31:0] $end
$upscope $end
$scope module R28 $end
$var wire 32 q# D [31:0] $end
$var wire 1 r# Ld $end
$var wire 1 X clk $end
$var reg 32 s# Q [31:0] $end
$upscope $end
$scope module R29 $end
$var wire 32 t# D [31:0] $end
$var wire 1 u# Ld $end
$var wire 1 X clk $end
$var reg 32 v# Q [31:0] $end
$upscope $end
$scope module R3 $end
$var wire 32 w# D [31:0] $end
$var wire 1 x# Ld $end
$var wire 1 X clk $end
$var reg 32 y# Q [31:0] $end
$upscope $end
$scope module R30 $end
$var wire 32 z# D [31:0] $end
$var wire 1 {# Ld $end
$var wire 1 X clk $end
$var reg 32 |# Q [31:0] $end
$upscope $end
$scope module R31 $end
$var wire 32 }# D [31:0] $end
$var wire 1 ~# Ld $end
$var wire 1 X clk $end
$var reg 32 !$ Q [31:0] $end
$upscope $end
$scope module R4 $end
$var wire 32 "$ D [31:0] $end
$var wire 1 #$ Ld $end
$var wire 1 X clk $end
$var reg 32 $$ Q [31:0] $end
$upscope $end
$scope module R5 $end
$var wire 32 %$ D [31:0] $end
$var wire 1 &$ Ld $end
$var wire 1 X clk $end
$var reg 32 '$ Q [31:0] $end
$upscope $end
$scope module R6 $end
$var wire 32 ($ D [31:0] $end
$var wire 1 )$ Ld $end
$var wire 1 X clk $end
$var reg 32 *$ Q [31:0] $end
$upscope $end
$scope module R7 $end
$var wire 32 +$ D [31:0] $end
$var wire 1 ,$ Ld $end
$var wire 1 X clk $end
$var reg 32 -$ Q [31:0] $end
$upscope $end
$scope module R8 $end
$var wire 32 .$ D [31:0] $end
$var wire 1 /$ Ld $end
$var wire 1 X clk $end
$var reg 32 0$ Q [31:0] $end
$upscope $end
$scope module R9 $end
$var wire 32 1$ D [31:0] $end
$var wire 1 2$ Ld $end
$var wire 1 X clk $end
$var reg 32 3$ Q [31:0] $end
$upscope $end
$scope module bdecoder $end
$var wire 5 4$ C [4:0] $end
$var wire 1 9 RF $end
$var reg 32 5$ E [31:0] $end
$upscope $end
$scope module mux_32x1A $end
$var wire 32 6$ R0 [31:0] $end
$var wire 32 7$ R1 [31:0] $end
$var wire 32 8$ R10 [31:0] $end
$var wire 32 9$ R11 [31:0] $end
$var wire 32 :$ R12 [31:0] $end
$var wire 32 ;$ R13 [31:0] $end
$var wire 32 <$ R14 [31:0] $end
$var wire 32 =$ R15 [31:0] $end
$var wire 32 >$ R16 [31:0] $end
$var wire 32 ?$ R17 [31:0] $end
$var wire 32 @$ R18 [31:0] $end
$var wire 32 A$ R19 [31:0] $end
$var wire 32 B$ R2 [31:0] $end
$var wire 32 C$ R20 [31:0] $end
$var wire 32 D$ R21 [31:0] $end
$var wire 32 E$ R22 [31:0] $end
$var wire 32 F$ R23 [31:0] $end
$var wire 32 G$ R24 [31:0] $end
$var wire 32 H$ R25 [31:0] $end
$var wire 32 I$ R26 [31:0] $end
$var wire 32 J$ R27 [31:0] $end
$var wire 32 K$ R28 [31:0] $end
$var wire 32 L$ R29 [31:0] $end
$var wire 32 M$ R3 [31:0] $end
$var wire 32 N$ R30 [31:0] $end
$var wire 32 O$ R31 [31:0] $end
$var wire 32 P$ R4 [31:0] $end
$var wire 32 Q$ R5 [31:0] $end
$var wire 32 R$ R6 [31:0] $end
$var wire 32 S$ R7 [31:0] $end
$var wire 32 T$ R8 [31:0] $end
$var wire 32 U$ R9 [31:0] $end
$var wire 5 V$ S [4:0] $end
$var reg 32 W$ Y [31:0] $end
$upscope $end
$scope module mux_32x1B $end
$var wire 32 X$ R0 [31:0] $end
$var wire 32 Y$ R1 [31:0] $end
$var wire 32 Z$ R10 [31:0] $end
$var wire 32 [$ R11 [31:0] $end
$var wire 32 \$ R12 [31:0] $end
$var wire 32 ]$ R13 [31:0] $end
$var wire 32 ^$ R14 [31:0] $end
$var wire 32 _$ R15 [31:0] $end
$var wire 32 `$ R16 [31:0] $end
$var wire 32 a$ R17 [31:0] $end
$var wire 32 b$ R18 [31:0] $end
$var wire 32 c$ R19 [31:0] $end
$var wire 32 d$ R2 [31:0] $end
$var wire 32 e$ R20 [31:0] $end
$var wire 32 f$ R21 [31:0] $end
$var wire 32 g$ R22 [31:0] $end
$var wire 32 h$ R23 [31:0] $end
$var wire 32 i$ R24 [31:0] $end
$var wire 32 j$ R25 [31:0] $end
$var wire 32 k$ R26 [31:0] $end
$var wire 32 l$ R27 [31:0] $end
$var wire 32 m$ R28 [31:0] $end
$var wire 32 n$ R29 [31:0] $end
$var wire 32 o$ R3 [31:0] $end
$var wire 32 p$ R30 [31:0] $end
$var wire 32 q$ R31 [31:0] $end
$var wire 32 r$ R4 [31:0] $end
$var wire 32 s$ R5 [31:0] $end
$var wire 32 t$ R6 [31:0] $end
$var wire 32 u$ R7 [31:0] $end
$var wire 32 v$ R8 [31:0] $end
$var wire 32 w$ R9 [31:0] $end
$var wire 5 x$ S [4:0] $end
$var reg 32 y$ Y [31:0] $end
$upscope $end
$scope module mux_32x1D $end
$var wire 32 z$ R0 [31:0] $end
$var wire 32 {$ R1 [31:0] $end
$var wire 32 |$ R10 [31:0] $end
$var wire 32 }$ R11 [31:0] $end
$var wire 32 ~$ R12 [31:0] $end
$var wire 32 !% R13 [31:0] $end
$var wire 32 "% R14 [31:0] $end
$var wire 32 #% R15 [31:0] $end
$var wire 32 $% R16 [31:0] $end
$var wire 32 %% R17 [31:0] $end
$var wire 32 &% R18 [31:0] $end
$var wire 32 '% R19 [31:0] $end
$var wire 32 (% R2 [31:0] $end
$var wire 32 )% R20 [31:0] $end
$var wire 32 *% R21 [31:0] $end
$var wire 32 +% R22 [31:0] $end
$var wire 32 ,% R23 [31:0] $end
$var wire 32 -% R24 [31:0] $end
$var wire 32 .% R25 [31:0] $end
$var wire 32 /% R26 [31:0] $end
$var wire 32 0% R27 [31:0] $end
$var wire 32 1% R28 [31:0] $end
$var wire 32 2% R29 [31:0] $end
$var wire 32 3% R3 [31:0] $end
$var wire 32 4% R30 [31:0] $end
$var wire 32 5% R31 [31:0] $end
$var wire 32 6% R4 [31:0] $end
$var wire 32 7% R5 [31:0] $end
$var wire 32 8% R6 [31:0] $end
$var wire 32 9% R7 [31:0] $end
$var wire 32 :% R8 [31:0] $end
$var wire 32 ;% R9 [31:0] $end
$var wire 5 <% S [4:0] $end
$var reg 32 =% Y [31:0] $end
$upscope $end
$upscope $end
$scope module adder $end
$var wire 32 >% PC_in [31:0] $end
$var reg 32 ?% PC_out [31:0] $end
$upscope $end
$scope module output_H $end
$var wire 1 @% MEM_call_instr $end
$var wire 1 A% MEM_jmpl_instr $end
$var wire 1 B% MEM_load_instr $end
$var reg 2 C% output_handler_out_selector [1:0] $end
$upscope $end
$scope module pc_npc_H $end
$var wire 1 D% ID_call_instr $end
$var wire 1 E% ID_jmpl_instr $end
$var wire 1 ) branch_out $end
$var reg 2 F% pc_handler_out_selector [1:0] $end
$upscope $end
$scope module ram $end
$var wire 8 G% Address [7:0] $end
$var wire 32 H% DataIn [31:0] $end
$var wire 1 I% Enable $end
$var wire 1 J% ReadWrite $end
$var wire 1 K% SignExtend $end
$var wire 2 L% Size [1:0] $end
$var reg 32 M% DataOut [31:0] $end
$upscope $end
$scope module rom $end
$var wire 8 N% Address [7:0] $end
$var reg 32 O% DataOut [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b10001010000000000000000000000000 O%
b0 N%
bx M%
bx L%
zK%
zJ%
zI%
bz H%
bz G%
b0 F%
0E%
0D%
b0 C%
zB%
zA%
z@%
b100 ?%
b0 >%
bx =%
b0 <%
bx ;%
bx :%
bx 9%
bx 8%
bx 7%
bx 6%
bx 5%
bx 4%
bx 3%
bx 2%
bx 1%
bx 0%
bx /%
bx .%
bx -%
bx ,%
bx +%
bx *%
bx )%
bx (%
bx '%
bx &%
bx %%
bx $%
bx #%
bx "%
bx !%
bx ~$
bx }$
bx |$
bx {$
bx z$
bx y$
b0 x$
bx w$
bx v$
bx u$
bx t$
bx s$
bx r$
bx q$
bx p$
bx o$
bx n$
bx m$
bx l$
bx k$
bx j$
bx i$
bx h$
bx g$
bx f$
bx e$
bx d$
bx c$
bx b$
bx a$
bx `$
bx _$
bx ^$
bx ]$
bx \$
bx [$
bx Z$
bx Y$
bx X$
bx W$
b0 V$
bx U$
bx T$
bx S$
bx R$
bx Q$
bx P$
bx O$
bx N$
bx M$
bx L$
bx K$
bx J$
bx I$
bx H$
bx G$
bx F$
bx E$
bx D$
bx C$
bx B$
bx A$
bx @$
bx ?$
bx >$
bx =$
bx <$
bx ;$
bx :$
bx 9$
bx 8$
bx 7$
bx 6$
b0 5$
b0 4$
bx 3$
02$
bz 1$
bx 0$
0/$
bz .$
bx -$
0,$
bz +$
bx *$
0)$
bz ($
bx '$
0&$
bz %$
bx $$
0#$
bz "$
bx !$
0~#
bz }#
bx |#
0{#
bz z#
bx y#
0x#
bz w#
bx v#
0u#
bz t#
bx s#
0r#
bz q#
bx p#
0o#
bz n#
bx m#
0l#
bz k#
bx j#
0i#
bz h#
bx g#
0f#
bz e#
bx d#
0c#
bz b#
bx a#
0`#
bz _#
bx ^#
0]#
bz \#
bx [#
0Z#
bz Y#
bx X#
0W#
bz V#
bx U#
0T#
bz S#
bx R#
0Q#
bz P#
bx O#
0N#
bz M#
bx L#
0K#
bz J#
bx I#
0H#
bz G#
bx F#
0E#
bz D#
bx C#
0B#
bz A#
bx @#
0?#
bz >#
bx =#
0<#
bz ;#
bx :#
09#
bz 8#
bx 7#
06#
bz 5#
bx 4#
03#
bz 2#
b0 1#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
bx o"
bx n"
bx m"
bx l"
b0 k"
b0 j"
b0 i"
b0 h"
bz g"
b0 f"
b0 e"
b100 d"
bx c"
bz b"
bx a"
bx `"
b0 _"
bz ^"
bz ]"
bz \"
bx ["
bx Z"
b0 Y"
bz X"
bz W"
bz V"
bx U"
bx T"
b0 S"
bz R"
bz Q"
bz P"
b0 O"
b0 N"
b0 M"
b0 L"
bx K"
bx J"
b0 I"
bz H"
b0 G"
bz F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b10001010000000000000000000000000 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b1011 /"
bz ."
bz -"
bz ,"
0+"
b0 *"
b0 )"
b0 ("
0'"
x&"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
0}
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
bz t
b0 s
b0 r
bx q
bx p
bx o
0n
0m
0l
b0 k
0j
0i
0h
0g
0f
b0 e
0d
0c
0b
0a
0`
b0 _
b0 ^
b10000000000000000000000000000011 ]
b1 \
1[
b0 Z
1Y
0X
bx W
0V
b1011 U
b111100 T
b0 S
0R
b0 Q
b0 P
bx O
b0 N
b0 M
b0 L
0K
b0 J
b0 I
bx H
bx G
bx F
0E
0D
b0 C
0B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
09
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b10001010000000000000000000000000 2
b0 1
b100 0
bx /
bx .
bx -
b0 ,
b0 +
b0 *
z)
bx (
bz '
0&
bz %
bz $
bz #
bz "
bz !
$end
#2000
1X
#3000
b10000001000 J
b10000001000 s
b10000001000 0"
1n
b10000001000 Q
b10000001000 ^
b10000001000 r
1d
1D
1'"
1&
1+"
b0 q
b10 o
b10001010000000000000000000000000 1
b10001010000000000000000000000000 _
b10001010000000000000000000000000 E"
b101 8
b101 @"
b101 ,
b101 $"
b101 B"
b101 j"
b101 <%
b1010000000000000000000000000 L
b1010000000000000000000000000 A"
bz 8"
bz 7"
bz 6"
b1011 <
b1011 w
b1011 %"
b1011 9"
bz y
0Y
0[
#4000
0X
#6000
b10000110101000001110000000000001 2
b10000110101000001110000000000001 <"
b10000110101000001110000000000001 O%
1}
b100 N%
b1000 0
b1000 d"
b1000 ?%
b1011 ;
b1011 z
b1011 ~
b1011 L"
b1000 N
b1000 v
b1000 :"
b1 C
b1 4"
b100 @
b100 ="
b100 f"
b100 >%
1X
#8000
0X
#10000
b1010011000001000 J
b1010011000001000 s
b1010011000001000 0"
1`
b10 e
b1010011000001000 Q
b1010011000001000 ^
b1010011000001000 r
1a
0D
0'"
0&
0+"
b11000100000010000000000000000001 2
b11000100000010000000000000000001 <"
b11000100000010000000000000000001 O%
b10100 q
b1000 N%
b1100 0
b1100 d"
b1100 ?%
b100 >
b100 1"
b100 D"
b10000110101000001110000000000001 1
b10000110101000001110000000000001 _
b10000110101000001110000000000001 E"
b11 8
b11 @"
b11 ,
b11 $"
b11 B"
b11 j"
b11 <%
b1 *
b1 ""
b1 C"
b1 i"
b1 x$
b11 +
b11 #"
b11 >"
b11 h"
b11 V$
b110101000001110000000000001 L
b110101000001110000000000001 A"
b1000001110000000000001 I
b1000001110000000000001 2"
b1000001110000000000001 ?"
1B
b1000 @
b1000 ="
b1000 f"
b1000 >%
1X
#12000
0X
#14000
b110001001100 J
b110001001100 s
b110001001100 0"
bz H
bz U"
1m
1h
b0 e
0`
0a
b110001001100 Q
b110001001100 ^
b110001001100 r
1c
1D
1'"
1&
1+"
b11 7
b11 ("
b11 S"
13#
b1 1#
b1 5$
b1 q
b11 o
19
b1000001110000000000001 M
b1000001110000000000001 5"
1R
b10 S
b10 3"
b1001 C
b1001 4"
b100 ?
b100 u
b100 ;"
b1000 >
b1000 1"
b1000 D"
b11000100000010000000000000000001 1
b11000100000010000000000000000001 _
b11000100000010000000000000000001 E"
b10 8
b10 @"
b10 ,
b10 $"
b10 B"
b10 j"
b10 <%
b0 +
b0 #"
b0 >"
b0 h"
b0 V$
b100000010000000000000000001 L
b100000010000000000000000001 A"
b10000000000000000001 I
b10000000000000000001 2"
b10000000000000000001 ?"
1X
#16000
0X
#18000
b11001010001010000110000000000001 2
b11001010001010000110000000000001 <"
b11001010001010000110000000000001 O%
b1100 N%
b10000 0
b10000 d"
b10000 ?%
bz /
bz T"
bz 0#
bz W$
b10000000000000000001 M
b10000000000000000001 5"
0R
b1001100 N
b1001100 v
b1001100 :"
b0 S
b0 3"
b11 C
b11 4"
b1000 ?
b1000 u
b1000 ;"
b100 =
b100 |
b100 G"
b100 M"
b1100 @
b1100 ="
b1100 f"
b1100 >%
bz -#
bz 4#
bz 6$
bz X$
bz z$
1X
#20000
0X
#22000
b10110001100000 J
b10110001100000 s
b10110001100000 0"
bx H
bx U"
0n
1i
0m
b10110001100000 Q
b10110001100000 ^
b10110001100000 r
1a
b0 7
b0 ("
b0 S"
b10010101111111111111111111110 2
b10010101111111111111111111110 <"
b10010101111111111111111111110 O%
b101 q
bx /
bx T"
bx 0#
bx W$
b10000 N%
b10100 0
b10100 d"
b10100 ?%
b100 O"
b1000 =
b1000 |
b1000 G"
b1000 M"
b100 A
b100 {
b100 P
b100 x
b1100 >
b1100 1"
b1100 D"
b11001010001010000110000000000001 1
b11001010001010000110000000000001 _
b11001010001010000110000000000001 E"
b101 8
b101 @"
b101 ,
b101 $"
b101 B"
b101 j"
b101 <%
b1 +
b1 #"
b1 >"
b1 h"
b1 V$
b1010001010000110000000000001 L
b1010001010000110000000000001 A"
b1010000110000000000001 I
b1010000110000000000001 2"
b1010000110000000000001 ?"
b10000 @
b10000 ="
b10000 f"
b10000 >%
1X
#24000
0X
#26000
b10000000000000 J
b10000000000000 s
b10000000000000 0"
1E
1f
0h
0i
0c
b1000010000000000000 Q
b1000010000000000000 ^
b1000010000000000000 r
0d
b1011000011110000111100000110 2
b1011000011110000111100000110 <"
b1011000011110000111100000110 O%
b10 p
b0 o
0}
b10100 N%
b11000 0
b11000 d"
b11000 ?%
b10000 >
b10000 1"
b10000 D"
b10010101111111111111111111110 1
b10010101111111111111111111110 _
b10010101111111111111111111110 E"
b1001 8
b1001 @"
b1001 ,
b1001 $"
b1001 B"
b1001 j"
b1001 <%
b11110 *
b11110 ""
b11110 C"
b11110 i"
b11110 x$
b11111 +
b11111 #"
b11111 >"
b11111 h"
b11111 V$
b10010101111111111111111111110 L
b10010101111111111111111111110 A"
b1111111111111111111110 I
b1111111111111111111110 2"
b1111111111111111111110 ?"
b1010000110000000000001 M
b1010000110000000000001 5"
b1100000 N
b1100000 v
b1100000 :"
b1011 C
b1011 4"
b1100 ?
b1100 u
b1100 ;"
b1000 O"
b10100 @
b10100 ="
b10100 f"
b10100 >%
1X
#28000
0X
#30000
b111001000000001000 J
b111001000000001000 s
b111001000000001000 0"
0E
1n
0f
b1110 e
0a
b111001000000001000 Q
b111001000000001000 ^
b111001000000001000 r
1b
b1000000000000000000000000000100 2
b1000000000000000000000000000100 <"
b1000000000000000000000000000100 O%
b100 p
b11000 N%
b11100 0
b11100 d"
b11100 ?%
b1100 =
b1100 |
b1100 G"
b1100 M"
0B
b0 A
b0 {
b110 P
b110 x
b1111111111111111111110 M
b1111111111111111111110 5"
b0 N
b0 v
b0 :"
b1000 C
b1000 4"
b10000 ?
b10000 u
b10000 ;"
b10100 >
b10100 1"
b10100 D"
b1011000011110000111100000110 1
b1011000011110000111100000110 _
b1011000011110000111100000110 E"
b101 8
b101 @"
b101 ,
b101 $"
b101 B"
b101 j"
b101 <%
b110 *
b110 ""
b110 C"
b110 i"
b110 x$
b11100 +
b11100 #"
b11100 >"
b11100 h"
b11100 V$
b1011000011110000111100000110 L
b1011000011110000111100000110 A"
b11110000111100000110 I
b11110000111100000110 2"
b11110000111100000110 ?"
b11000 @
b11000 ="
b11000 f"
b11000 >%
1X
#32000
0X
#34000
1E%
b100000001010 J
b100000001010 s
b100000001010 0"
bz F
bz a"
bz H
bz U"
b0 e
1g
0b
b100000001010 Q
b100000001010 ^
b100000001010 r
1c
0D
0'"
0&
0+"
03#
b10000001110000000000000000001111 2
b10000001110000000000000000001111 <"
b10000001110000000000000000001111 O%
b1 o
bz -
bz `"
bz .#
bz =%
bz /
bz T"
bz 0#
bz W$
1}
b0 1#
b0 5$
b11100 N%
b100000 0
b100000 d"
b100000 ?%
b11000 >
b11000 1"
b11000 D"
b1000000000000000000000000000100 1
b1000000000000000000000000000100 _
b1000000000000000000000000000100 E"
b0 8
b0 @"
b0 ,
b0 $"
b0 B"
b0 j"
b0 <%
b100 *
b100 ""
b100 C"
b100 i"
b100 x$
b0 +
b0 #"
b0 >"
b0 h"
b0 V$
b100 L
b100 A"
b100 I
b100 2"
b100 ?"
b11110000111100000110 M
b11110000111100000110 5"
b1000 N
b1000 v
b1000 :"
b1110 S
b1110 3"
b100 C
b100 4"
b10100 ?
b10100 u
b10100 ;"
b10000 =
b10000 |
b10000 G"
b10000 M"
b0 P
b0 x
09
b1100 O"
b11100 @
b11100 ="
b11100 f"
b11100 >%
1X
#36000
0X
#38000
b11 3
b11 e"
b11 F%
1D%
0E%
b1010000000001 J
b1010000000001 s
b1010000000001 0"
0n
1l
0g
1b
0c
b1010000000001 Q
b1010000000001 ^
b1010000000001 r
1d
b111000 q
b10 o
b10000 O"
b10100 =
b10100 |
b10100 G"
b10100 M"
1B
b100 M
b100 5"
b1010 N
b1010 v
b1010 :"
b0 S
b0 3"
b10 C
b10 4"
b11000 ?
b11000 u
b11000 ;"
b11100 >
b11100 1"
b11100 D"
b10000001110000000000000000001111 1
b10000001110000000000000000001111 _
b10000001110000000000000000001111 E"
b1111 *
b1111 ""
b1111 C"
b1111 i"
b1111 x$
b1110000000000000000001111 L
b1110000000000000000001111 A"
b1111 I
b1111 2"
b1111 ?"
1X
#40000
b0 3
b0 e"
b0 F%
0D%
b0 J
b0 s
b0 0"
0X
1V
#42000
b11 5
b11 *"
b11 _"
b11 7
b11 ("
b11 S"
13#
0}
b1 1#
b1 5$
b1111 M
b1111 5"
b0 N
b0 v
b0 :"
b0 C
b0 4"
b11100 ?
b11100 u
b11100 ;"
b11000 =
b11000 |
b11000 G"
b11000 M"
b10 A
b10 {
19
b10100 O"
1X
#44000
0X
#46000
b11000 O"
b11100 =
b11100 |
b11100 G"
b11100 M"
0B
b0 A
b0 {
1X
#48000
0X
#50000
b0 5
b0 *"
b0 _"
b0 7
b0 ("
b0 S"
03#
b0 1#
b0 5$
09
b11100 O"
1X
#52000
0X
#54000
1X
#56000
0X
#58000
1X
#60000
0X
#62000
1X
