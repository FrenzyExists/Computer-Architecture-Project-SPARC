$date
	Mon Jun  5 07:17:59 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module sparc_fantastica $end
$var wire 32 ! MEM_ALU_OUT_Address [31:0] $end
$var wire 32 " MEM_Data_IN_PD [31:0] $end
$var wire 32 # MEM_OUT [31:0] $end
$var wire 3 $ MEM_Output_Handler [2:0] $end
$var wire 1 % PC_nPC_LE $end
$var wire 32 & WB_OUT [31:0] $end
$var wire 32 ' WB_RD_BACK [31:0] $end
$var wire 5 ( rs2 [4:0] $end
$var wire 5 ) rs1 [4:0] $end
$var wire 5 * rd [4:0] $end
$var wire 32 + pd [31:0] $end
$var wire 32 , pb [31:0] $end
$var wire 32 - pa [31:0] $end
$var wire 32 . nPC4 [31:0] $end
$var wire 32 / nPC [31:0] $end
$var wire 32 0 instruction_out [31:0] $end
$var wire 32 1 instruction [31:0] $end
$var wire 2 2 forwardPC [1:0] $end
$var wire 2 3 forwardOutputHandler [1:0] $end
$var wire 2 4 forwardMX3 [1:0] $end
$var wire 2 5 forwardMX2 [1:0] $end
$var wire 2 6 forwardMX1 [1:0] $end
$var wire 1 7 cond_branch_OUT $end
$var wire 4 8 cond [3:0] $end
$var wire 1 9 WB_Register_File_Enable $end
$var wire 1 : S $end
$var wire 5 ; RD_WB [4:0] $end
$var wire 5 < RD_MEM [4:0] $end
$var wire 5 = RD_ID [4:0] $end
$var wire 5 > RD_EX [4:0] $end
$var wire 4 ? PSR_OUT [3:0] $end
$var wire 32 @ PC_MEM [31:0] $end
$var wire 32 A PC_ID [31:0] $end
$var wire 32 B PC_EX [31:0] $end
$var wire 32 C PCMUX_OUT [31:0] $end
$var wire 32 D PC [31:0] $end
$var wire 3 E OutputHandlerInstructions [2:0] $end
$var wire 32 F N [31:0] $end
$var wire 1 G MEM_CU $end
$var wire 4 H IS [3:0] $end
$var wire 1 I IF_ID_LE $end
$var wire 1 J ID_branch_instr $end
$var wire 32 K ID_MX3 [31:0] $end
$var wire 32 L ID_MX2 [31:0] $end
$var wire 32 M ID_MX1 [31:0] $end
$var wire 22 N ID_Imm22 [21:0] $end
$var wire 18 O ID_CU [17:0] $end
$var wire 1 P I29_branch_instr $end
$var wire 30 Q I29_0 [29:0] $end
$var wire 4 R FLAGS [3:0] $end
$var wire 32 S EX_MX3 [31:0] $end
$var wire 32 T EX_MX2 [31:0] $end
$var wire 32 U EX_MX1 [31:0] $end
$var wire 22 V EX_Imm22 [21:0] $end
$var wire 9 W EX_CU [8:0] $end
$var wire 32 X DataMemory_OUT [31:0] $end
$var wire 5 Y DataMemInstructions [4:0] $end
$var wire 19 Z CU_SIG [18:0] $end
$var wire 1 [ CIN $end
$var wire 1 \ CC_Enable $end
$var wire 4 ] CC_COND [3:0] $end
$var wire 32 ^ ALU_OUT [31:0] $end
$var wire 4 _ ALU_OP [3:0] $end
$var reg 8 ` Addr [7:0] $end
$var reg 32 a TA [31:0] $end
$var reg 1 b clk $end
$var reg 1 c clr $end
$var reg 8 d data [7:0] $end
$var reg 1 e reset $end
$var integer 32 f code [31:0] $end
$var integer 32 g fi [31:0] $end
$scope module ALU $end
$var wire 4 h opcode [3:0] $end
$var wire 1 [ cin $end
$var wire 32 i b [31:0] $end
$var wire 32 j a [31:0] $end
$var reg 33 k carry [32:0] $end
$var reg 4 l flags [3:0] $end
$var reg 32 m y [31:0] $end
$upscope $end
$scope module CU $end
$var wire 1 b clk $end
$var wire 1 c clr $end
$var wire 19 n instr_signals [18:0] $end
$var wire 32 o instr [31:0] $end
$var reg 1 p CC_Enable $end
$var reg 1 q I13 $end
$var reg 1 r I24 $end
$var reg 1 s I30 $end
$var reg 1 t I31 $end
$var reg 4 u ID_ALU_OP_instr [3:0] $end
$var reg 1 v ID_branch_instr $end
$var reg 1 w ID_call_instr $end
$var reg 1 x ID_data_mem_Enable $end
$var reg 1 y ID_data_mem_RW $end
$var reg 1 z ID_data_mem_SE $end
$var reg 2 { ID_data_mem_Size [1:0] $end
$var reg 1 | ID_jmpl_instr $end
$var reg 1 } ID_load_instr $end
$var reg 1 ~ ID_register_file_Enable $end
$var reg 2 !" instr_op [1:0] $end
$var reg 3 "" is_sethi [2:0] $end
$var reg 6 #" op3 [5:0] $end
$upscope $end
$scope module CU_MUX $end
$var wire 19 $" cu_in_mux [18:0] $end
$var wire 1 : S $end
$var reg 18 %" CU_SIGNALS [17:0] $end
$var reg 1 J ID_branch_instr_out $end
$upscope $end
$scope module EX_MEM $end
$var wire 32 &" EX_ALU_OUT [31:0] $end
$var wire 1 b clk $end
$var wire 1 c clr $end
$var wire 32 '" PC [31:0] $end
$var wire 9 (" EX_control_unit_instr [8:0] $end
$var wire 5 )" EX_RD_instr [4:0] $end
$var reg 5 *" Data_Mem_instructions [4:0] $end
$var reg 32 +" MEM_ALU_OUT [31:0] $end
$var reg 5 ," MEM_RD_instr [4:0] $end
$var reg 1 G MEM_control_unit_instr $end
$var reg 3 -" Output_Handler_instructions [2:0] $end
$var reg 32 ." PC_MEM [31:0] $end
$upscope $end
$scope module HAZARD $end
$var wire 1 /" EX_Register_File_Enable $end
$var wire 5 0" MEM_RD [4:0] $end
$var wire 1 G MEM_Register_File_Enable $end
$var wire 1 9 WB_Register_File_Enable $end
$var wire 5 1" WB_RD [4:0] $end
$var wire 5 2" ID_rs2 [4:0] $end
$var wire 5 3" ID_rs1 [4:0] $end
$var wire 5 4" ID_rd [4:0] $end
$var wire 5 5" EX_RD [4:0] $end
$var reg 1 : CU_S $end
$var reg 1 I IF_ID_LE $end
$var reg 1 6" PC_LE $end
$var reg 2 7" forwardMX1 [1:0] $end
$var reg 2 8" forwardMX2 [1:0] $end
$var reg 2 9" forwardMX3 [1:0] $end
$var reg 1 :" nPC_LE $end
$upscope $end
$scope module ID_EX $end
$var wire 18 ;" ID_control_unit_instr [17:0] $end
$var wire 1 b clk $end
$var wire 1 c clr $end
$var wire 32 <" PC [31:0] $end
$var wire 22 =" Imm22 [21:0] $end
$var wire 5 >" ID_RD_instr [4:0] $end
$var wire 32 ?" ID_MX3 [31:0] $end
$var wire 32 @" ID_MX2 [31:0] $end
$var wire 32 A" ID_MX1 [31:0] $end
$var reg 4 B" EX_ALU_OP_instr [3:0] $end
$var reg 1 \ EX_CC_Enable_instr $end
$var reg 4 C" EX_IS_instr [3:0] $end
$var reg 22 D" EX_Imm22 [21:0] $end
$var reg 32 E" EX_MX1 [31:0] $end
$var reg 32 F" EX_MX2 [31:0] $end
$var reg 32 G" EX_MX3 [31:0] $end
$var reg 5 H" EX_RD_instr [4:0] $end
$var reg 9 I" EX_control_unit_instr [8:0] $end
$var reg 32 J" PC_EX [31:0] $end
$upscope $end
$scope module ID_MUX_thing $end
$var wire 5 K" I1 [4:0] $end
$var wire 1 L" S $end
$var wire 5 M" I0 [4:0] $end
$var reg 5 N" Y [4:0] $end
$upscope $end
$scope module IF_ID $end
$var wire 1 I LE $end
$var wire 1 b clk $end
$var wire 1 c clr $end
$var wire 1 e reset $end
$var wire 32 O" instruction [31:0] $end
$var wire 32 P" PC [31:0] $end
$var reg 5 Q" I18_14 [4:0] $end
$var reg 22 R" I21_0 [21:0] $end
$var reg 4 S" I28_25 [3:0] $end
$var reg 30 T" I29_0 [29:0] $end
$var reg 5 U" I29_25 [4:0] $end
$var reg 1 P I29_branch_instr $end
$var reg 5 V" I4_0 [4:0] $end
$var reg 32 W" PC_ID_out [31:0] $end
$var reg 32 X" instruction_out [31:0] $end
$upscope $end
$scope module MEM_MUX $end
$var wire 32 Y" I1 [31:0] $end
$var wire 32 Z" I2 [31:0] $end
$var wire 32 [" I3 [31:0] $end
$var wire 2 \" S [1:0] $end
$var wire 32 ]" I0 [31:0] $end
$var reg 32 ^" Y [31:0] $end
$upscope $end
$scope module MEM_WB $end
$var wire 5 _" MEM_RD_instr [4:0] $end
$var wire 1 G MEM_control_unit_instr $end
$var wire 32 `" MUX_out [31:0] $end
$var wire 1 b clk $end
$var wire 1 c clr $end
$var reg 5 a" WB_RD_instr [4:0] $end
$var reg 32 b" WB_RD_out [31:0] $end
$var reg 1 9 WB_Register_File_Enable $end
$upscope $end
$scope module MX1 $end
$var wire 32 c" I1 [31:0] $end
$var wire 32 d" I2 [31:0] $end
$var wire 32 e" I3 [31:0] $end
$var wire 2 f" S [1:0] $end
$var wire 32 g" I0 [31:0] $end
$var reg 32 h" Y [31:0] $end
$upscope $end
$scope module MX2 $end
$var wire 32 i" I1 [31:0] $end
$var wire 32 j" I2 [31:0] $end
$var wire 32 k" I3 [31:0] $end
$var wire 2 l" S [1:0] $end
$var wire 32 m" I0 [31:0] $end
$var reg 32 n" Y [31:0] $end
$upscope $end
$scope module MX3 $end
$var wire 32 o" I1 [31:0] $end
$var wire 32 p" I2 [31:0] $end
$var wire 32 q" I3 [31:0] $end
$var wire 2 r" S [1:0] $end
$var wire 32 s" I0 [31:0] $end
$var reg 32 t" Y [31:0] $end
$upscope $end
$scope module MX4X1 $end
$var wire 4 u" I1 [3:0] $end
$var wire 1 \ S $end
$var wire 4 v" I0 [3:0] $end
$var reg 4 w" Y [3:0] $end
$upscope $end
$scope module PCMUX $end
$var wire 32 x" ALU_OUT [31:0] $end
$var wire 32 y" TA [31:0] $end
$var wire 2 z" select [1:0] $end
$var wire 32 {" nPC [31:0] $end
$var reg 32 |" Q [31:0] $end
$upscope $end
$scope module PC_Reg $end
$var wire 32 }" D [31:0] $end
$var wire 1 % LE $end
$var wire 1 b clk $end
$var wire 1 c clr $end
$var reg 32 ~" Q [31:0] $end
$upscope $end
$scope module PSR $end
$var wire 1 b clk $end
$var wire 1 \ enable $end
$var wire 4 !# flags [3:0] $end
$var reg 1 [ carry $end
$var reg 4 "# out [3:0] $end
$upscope $end
$scope module REG_FILE $end
$var wire 1 9 LE $end
$var wire 32 ## PW [31:0] $end
$var wire 5 $# RA [4:0] $end
$var wire 5 %# RB [4:0] $end
$var wire 5 &# RD [4:0] $end
$var wire 5 '# RW [4:0] $end
$var wire 1 b clk $end
$var wire 32 (# Q9 [31:0] $end
$var wire 32 )# Q8 [31:0] $end
$var wire 32 *# Q7 [31:0] $end
$var wire 32 +# Q6 [31:0] $end
$var wire 32 ,# Q5 [31:0] $end
$var wire 32 -# Q4 [31:0] $end
$var wire 32 .# Q31 [31:0] $end
$var wire 32 /# Q30 [31:0] $end
$var wire 32 0# Q3 [31:0] $end
$var wire 32 1# Q29 [31:0] $end
$var wire 32 2# Q28 [31:0] $end
$var wire 32 3# Q27 [31:0] $end
$var wire 32 4# Q26 [31:0] $end
$var wire 32 5# Q25 [31:0] $end
$var wire 32 6# Q24 [31:0] $end
$var wire 32 7# Q23 [31:0] $end
$var wire 32 8# Q22 [31:0] $end
$var wire 32 9# Q21 [31:0] $end
$var wire 32 :# Q20 [31:0] $end
$var wire 32 ;# Q2 [31:0] $end
$var wire 32 <# Q19 [31:0] $end
$var wire 32 =# Q18 [31:0] $end
$var wire 32 ># Q17 [31:0] $end
$var wire 32 ?# Q16 [31:0] $end
$var wire 32 @# Q15 [31:0] $end
$var wire 32 A# Q14 [31:0] $end
$var wire 32 B# Q13 [31:0] $end
$var wire 32 C# Q12 [31:0] $end
$var wire 32 D# Q11 [31:0] $end
$var wire 32 E# Q10 [31:0] $end
$var wire 32 F# Q1 [31:0] $end
$var wire 32 G# Q0 [31:0] $end
$var wire 32 H# PD [31:0] $end
$var wire 32 I# PB [31:0] $end
$var wire 32 J# PA [31:0] $end
$var wire 32 K# E [31:0] $end
$scope module R0 $end
$var wire 32 L# D [31:0] $end
$var wire 1 M# Ld $end
$var wire 1 b clk $end
$var reg 32 N# Q [31:0] $end
$upscope $end
$scope module R1 $end
$var wire 32 O# D [31:0] $end
$var wire 1 P# Ld $end
$var wire 1 b clk $end
$var reg 32 Q# Q [31:0] $end
$upscope $end
$scope module R10 $end
$var wire 32 R# D [31:0] $end
$var wire 1 S# Ld $end
$var wire 1 b clk $end
$var reg 32 T# Q [31:0] $end
$upscope $end
$scope module R11 $end
$var wire 32 U# D [31:0] $end
$var wire 1 V# Ld $end
$var wire 1 b clk $end
$var reg 32 W# Q [31:0] $end
$upscope $end
$scope module R12 $end
$var wire 32 X# D [31:0] $end
$var wire 1 Y# Ld $end
$var wire 1 b clk $end
$var reg 32 Z# Q [31:0] $end
$upscope $end
$scope module R13 $end
$var wire 32 [# D [31:0] $end
$var wire 1 \# Ld $end
$var wire 1 b clk $end
$var reg 32 ]# Q [31:0] $end
$upscope $end
$scope module R14 $end
$var wire 32 ^# D [31:0] $end
$var wire 1 _# Ld $end
$var wire 1 b clk $end
$var reg 32 `# Q [31:0] $end
$upscope $end
$scope module R15 $end
$var wire 32 a# D [31:0] $end
$var wire 1 b# Ld $end
$var wire 1 b clk $end
$var reg 32 c# Q [31:0] $end
$upscope $end
$scope module R16 $end
$var wire 32 d# D [31:0] $end
$var wire 1 e# Ld $end
$var wire 1 b clk $end
$var reg 32 f# Q [31:0] $end
$upscope $end
$scope module R17 $end
$var wire 32 g# D [31:0] $end
$var wire 1 h# Ld $end
$var wire 1 b clk $end
$var reg 32 i# Q [31:0] $end
$upscope $end
$scope module R18 $end
$var wire 32 j# D [31:0] $end
$var wire 1 k# Ld $end
$var wire 1 b clk $end
$var reg 32 l# Q [31:0] $end
$upscope $end
$scope module R19 $end
$var wire 32 m# D [31:0] $end
$var wire 1 n# Ld $end
$var wire 1 b clk $end
$var reg 32 o# Q [31:0] $end
$upscope $end
$scope module R2 $end
$var wire 32 p# D [31:0] $end
$var wire 1 q# Ld $end
$var wire 1 b clk $end
$var reg 32 r# Q [31:0] $end
$upscope $end
$scope module R20 $end
$var wire 32 s# D [31:0] $end
$var wire 1 t# Ld $end
$var wire 1 b clk $end
$var reg 32 u# Q [31:0] $end
$upscope $end
$scope module R21 $end
$var wire 32 v# D [31:0] $end
$var wire 1 w# Ld $end
$var wire 1 b clk $end
$var reg 32 x# Q [31:0] $end
$upscope $end
$scope module R22 $end
$var wire 32 y# D [31:0] $end
$var wire 1 z# Ld $end
$var wire 1 b clk $end
$var reg 32 {# Q [31:0] $end
$upscope $end
$scope module R23 $end
$var wire 32 |# D [31:0] $end
$var wire 1 }# Ld $end
$var wire 1 b clk $end
$var reg 32 ~# Q [31:0] $end
$upscope $end
$scope module R24 $end
$var wire 32 !$ D [31:0] $end
$var wire 1 "$ Ld $end
$var wire 1 b clk $end
$var reg 32 #$ Q [31:0] $end
$upscope $end
$scope module R25 $end
$var wire 32 $$ D [31:0] $end
$var wire 1 %$ Ld $end
$var wire 1 b clk $end
$var reg 32 &$ Q [31:0] $end
$upscope $end
$scope module R26 $end
$var wire 32 '$ D [31:0] $end
$var wire 1 ($ Ld $end
$var wire 1 b clk $end
$var reg 32 )$ Q [31:0] $end
$upscope $end
$scope module R27 $end
$var wire 32 *$ D [31:0] $end
$var wire 1 +$ Ld $end
$var wire 1 b clk $end
$var reg 32 ,$ Q [31:0] $end
$upscope $end
$scope module R28 $end
$var wire 32 -$ D [31:0] $end
$var wire 1 .$ Ld $end
$var wire 1 b clk $end
$var reg 32 /$ Q [31:0] $end
$upscope $end
$scope module R29 $end
$var wire 32 0$ D [31:0] $end
$var wire 1 1$ Ld $end
$var wire 1 b clk $end
$var reg 32 2$ Q [31:0] $end
$upscope $end
$scope module R3 $end
$var wire 32 3$ D [31:0] $end
$var wire 1 4$ Ld $end
$var wire 1 b clk $end
$var reg 32 5$ Q [31:0] $end
$upscope $end
$scope module R30 $end
$var wire 32 6$ D [31:0] $end
$var wire 1 7$ Ld $end
$var wire 1 b clk $end
$var reg 32 8$ Q [31:0] $end
$upscope $end
$scope module R31 $end
$var wire 32 9$ D [31:0] $end
$var wire 1 :$ Ld $end
$var wire 1 b clk $end
$var reg 32 ;$ Q [31:0] $end
$upscope $end
$scope module R4 $end
$var wire 32 <$ D [31:0] $end
$var wire 1 =$ Ld $end
$var wire 1 b clk $end
$var reg 32 >$ Q [31:0] $end
$upscope $end
$scope module R5 $end
$var wire 32 ?$ D [31:0] $end
$var wire 1 @$ Ld $end
$var wire 1 b clk $end
$var reg 32 A$ Q [31:0] $end
$upscope $end
$scope module R6 $end
$var wire 32 B$ D [31:0] $end
$var wire 1 C$ Ld $end
$var wire 1 b clk $end
$var reg 32 D$ Q [31:0] $end
$upscope $end
$scope module R7 $end
$var wire 32 E$ D [31:0] $end
$var wire 1 F$ Ld $end
$var wire 1 b clk $end
$var reg 32 G$ Q [31:0] $end
$upscope $end
$scope module R8 $end
$var wire 32 H$ D [31:0] $end
$var wire 1 I$ Ld $end
$var wire 1 b clk $end
$var reg 32 J$ Q [31:0] $end
$upscope $end
$scope module R9 $end
$var wire 32 K$ D [31:0] $end
$var wire 1 L$ Ld $end
$var wire 1 b clk $end
$var reg 32 M$ Q [31:0] $end
$upscope $end
$scope module bdecoder $end
$var wire 5 N$ C [4:0] $end
$var wire 1 9 RF $end
$var reg 32 O$ E [31:0] $end
$upscope $end
$scope module mux_32x1A $end
$var wire 32 P$ R0 [31:0] $end
$var wire 32 Q$ R1 [31:0] $end
$var wire 32 R$ R10 [31:0] $end
$var wire 32 S$ R11 [31:0] $end
$var wire 32 T$ R12 [31:0] $end
$var wire 32 U$ R13 [31:0] $end
$var wire 32 V$ R14 [31:0] $end
$var wire 32 W$ R15 [31:0] $end
$var wire 32 X$ R16 [31:0] $end
$var wire 32 Y$ R17 [31:0] $end
$var wire 32 Z$ R18 [31:0] $end
$var wire 32 [$ R19 [31:0] $end
$var wire 32 \$ R2 [31:0] $end
$var wire 32 ]$ R20 [31:0] $end
$var wire 32 ^$ R21 [31:0] $end
$var wire 32 _$ R22 [31:0] $end
$var wire 32 `$ R23 [31:0] $end
$var wire 32 a$ R24 [31:0] $end
$var wire 32 b$ R25 [31:0] $end
$var wire 32 c$ R26 [31:0] $end
$var wire 32 d$ R27 [31:0] $end
$var wire 32 e$ R28 [31:0] $end
$var wire 32 f$ R29 [31:0] $end
$var wire 32 g$ R3 [31:0] $end
$var wire 32 h$ R30 [31:0] $end
$var wire 32 i$ R31 [31:0] $end
$var wire 32 j$ R4 [31:0] $end
$var wire 32 k$ R5 [31:0] $end
$var wire 32 l$ R6 [31:0] $end
$var wire 32 m$ R7 [31:0] $end
$var wire 32 n$ R8 [31:0] $end
$var wire 32 o$ R9 [31:0] $end
$var wire 5 p$ S [4:0] $end
$var reg 32 q$ Y [31:0] $end
$upscope $end
$scope module mux_32x1B $end
$var wire 32 r$ R0 [31:0] $end
$var wire 32 s$ R1 [31:0] $end
$var wire 32 t$ R10 [31:0] $end
$var wire 32 u$ R11 [31:0] $end
$var wire 32 v$ R12 [31:0] $end
$var wire 32 w$ R13 [31:0] $end
$var wire 32 x$ R14 [31:0] $end
$var wire 32 y$ R15 [31:0] $end
$var wire 32 z$ R16 [31:0] $end
$var wire 32 {$ R17 [31:0] $end
$var wire 32 |$ R18 [31:0] $end
$var wire 32 }$ R19 [31:0] $end
$var wire 32 ~$ R2 [31:0] $end
$var wire 32 !% R20 [31:0] $end
$var wire 32 "% R21 [31:0] $end
$var wire 32 #% R22 [31:0] $end
$var wire 32 $% R23 [31:0] $end
$var wire 32 %% R24 [31:0] $end
$var wire 32 &% R25 [31:0] $end
$var wire 32 '% R26 [31:0] $end
$var wire 32 (% R27 [31:0] $end
$var wire 32 )% R28 [31:0] $end
$var wire 32 *% R29 [31:0] $end
$var wire 32 +% R3 [31:0] $end
$var wire 32 ,% R30 [31:0] $end
$var wire 32 -% R31 [31:0] $end
$var wire 32 .% R4 [31:0] $end
$var wire 32 /% R5 [31:0] $end
$var wire 32 0% R6 [31:0] $end
$var wire 32 1% R7 [31:0] $end
$var wire 32 2% R8 [31:0] $end
$var wire 32 3% R9 [31:0] $end
$var wire 5 4% S [4:0] $end
$var reg 32 5% Y [31:0] $end
$upscope $end
$scope module mux_32x1D $end
$var wire 32 6% R0 [31:0] $end
$var wire 32 7% R1 [31:0] $end
$var wire 32 8% R10 [31:0] $end
$var wire 32 9% R11 [31:0] $end
$var wire 32 :% R12 [31:0] $end
$var wire 32 ;% R13 [31:0] $end
$var wire 32 <% R14 [31:0] $end
$var wire 32 =% R15 [31:0] $end
$var wire 32 >% R16 [31:0] $end
$var wire 32 ?% R17 [31:0] $end
$var wire 32 @% R18 [31:0] $end
$var wire 32 A% R19 [31:0] $end
$var wire 32 B% R2 [31:0] $end
$var wire 32 C% R20 [31:0] $end
$var wire 32 D% R21 [31:0] $end
$var wire 32 E% R22 [31:0] $end
$var wire 32 F% R23 [31:0] $end
$var wire 32 G% R24 [31:0] $end
$var wire 32 H% R25 [31:0] $end
$var wire 32 I% R26 [31:0] $end
$var wire 32 J% R27 [31:0] $end
$var wire 32 K% R28 [31:0] $end
$var wire 32 L% R29 [31:0] $end
$var wire 32 M% R3 [31:0] $end
$var wire 32 N% R30 [31:0] $end
$var wire 32 O% R31 [31:0] $end
$var wire 32 P% R4 [31:0] $end
$var wire 32 Q% R5 [31:0] $end
$var wire 32 R% R6 [31:0] $end
$var wire 32 S% R7 [31:0] $end
$var wire 32 T% R8 [31:0] $end
$var wire 32 U% R9 [31:0] $end
$var wire 5 V% S [4:0] $end
$var reg 32 W% Y [31:0] $end
$upscope $end
$upscope $end
$scope module SOURCE_OPERAND $end
$var wire 4 X% IS [3:0] $end
$var wire 22 Y% Imm [21:0] $end
$var wire 32 Z% R [31:0] $end
$var reg 32 [% N [31:0] $end
$upscope $end
$scope module adder $end
$var wire 32 \% PC_in [31:0] $end
$var reg 32 ]% PC_out [31:0] $end
$upscope $end
$scope module cond_H $end
$var wire 1 J ID_branch_instr $end
$var wire 4 ^% cond [3:0] $end
$var wire 4 _% flags [3:0] $end
$var reg 1 `% C $end
$var reg 1 a% N $end
$var reg 1 b% V $end
$var reg 1 c% Z $end
$var reg 1 7 branch_out $end
$upscope $end
$scope module nPC_Reg $end
$var wire 32 d% D [31:0] $end
$var wire 1 % LE $end
$var wire 1 b clk $end
$var wire 1 c clr $end
$var reg 32 e% Q [31:0] $end
$upscope $end
$scope module output_H $end
$var wire 1 f% MEM_call_instr $end
$var wire 1 g% MEM_jmpl_instr $end
$var wire 1 h% MEM_load_instr $end
$var reg 2 i% output_handler_out_selector [1:0] $end
$upscope $end
$scope module pc_npc_H $end
$var wire 1 j% ID_call_instr $end
$var wire 1 k% ID_jmpl_instr $end
$var wire 1 7 branch_out $end
$var reg 2 l% pc_handler_out_selector [1:0] $end
$upscope $end
$scope module ram $end
$var wire 8 m% Address [7:0] $end
$var wire 32 n% DataIn [31:0] $end
$var wire 1 o% Enable $end
$var wire 1 p% ReadWrite $end
$var wire 1 q% SignExtend $end
$var wire 2 r% Size [1:0] $end
$var reg 32 s% DataOut [31:0] $end
$upscope $end
$scope module rom $end
$var wire 8 t% Address [7:0] $end
$var reg 32 u% DataOut [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx u%
bx t%
bx s%
bx r%
zq%
zp%
zo%
bz n%
bz m%
bx l%
xk%
xj%
b0 i%
zh%
zg%
zf%
bx e%
bx d%
xc%
xb%
xa%
x`%
bx _%
bx ^%
bx ]%
bx \%
bx [%
bx Z%
bx Y%
bx X%
bx W%
bx V%
bx U%
bx T%
bx S%
bx R%
bx Q%
bx P%
bx O%
bx N%
bx M%
bx L%
bx K%
bx J%
bx I%
bx H%
bx G%
bx F%
bx E%
bx D%
bx C%
bx B%
bx A%
bx @%
bx ?%
bx >%
bx =%
bx <%
bx ;%
bx :%
bx 9%
bx 8%
bx 7%
bx 6%
bx 5%
bx 4%
bx 3%
bx 2%
bx 1%
bx 0%
bx /%
bx .%
bx -%
bx ,%
bx +%
bx *%
bx )%
bx (%
bx '%
bx &%
bx %%
bx $%
bx #%
bx "%
bx !%
bx ~$
bx }$
bx |$
bx {$
bx z$
bx y$
bx x$
bx w$
bx v$
bx u$
bx t$
bx s$
bx r$
bx q$
bx p$
bx o$
bx n$
bx m$
bx l$
bx k$
bx j$
bx i$
bx h$
bx g$
bx f$
bx e$
bx d$
bx c$
bx b$
bx a$
bx `$
bx _$
bx ^$
bx ]$
bx \$
bx [$
bx Z$
bx Y$
bx X$
bx W$
bx V$
bx U$
bx T$
bx S$
bx R$
bx Q$
bx P$
bx O$
bx N$
bx M$
xL$
bz K$
bx J$
xI$
bz H$
bx G$
xF$
bz E$
bx D$
xC$
bz B$
bx A$
x@$
bz ?$
bx >$
x=$
bz <$
bx ;$
x:$
bz 9$
bx 8$
x7$
bz 6$
bx 5$
x4$
bz 3$
bx 2$
x1$
bz 0$
bx /$
x.$
bz -$
bx ,$
x+$
bz *$
bx )$
x($
bz '$
bx &$
x%$
bz $$
bx #$
x"$
bz !$
bx ~#
x}#
bz |#
bx {#
xz#
bz y#
bx x#
xw#
bz v#
bx u#
xt#
bz s#
bx r#
xq#
bz p#
bx o#
xn#
bz m#
bx l#
xk#
bz j#
bx i#
xh#
bz g#
bx f#
xe#
bz d#
bx c#
xb#
bz a#
bx `#
x_#
bz ^#
bx ]#
x\#
bz [#
bx Z#
xY#
bz X#
bx W#
xV#
bz U#
bx T#
xS#
bz R#
bx Q#
xP#
bz O#
bx N#
xM#
bz L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
bx 2#
bx 1#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
bx &#
bx %#
bx $#
bz ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bz p"
bz o"
bx n"
bx m"
bx l"
bx k"
bz j"
bz i"
bx h"
bx g"
bx f"
bx e"
bz d"
bz c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
b0 \"
bz ["
bx Z"
bz Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
xL"
b111 K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
x:"
bx 9"
bx 8"
bx 7"
x6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
x/"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bz &"
bx %"
bx $"
bx #"
bx ""
bx !"
x~
x}
x|
bx {
xz
xy
xx
xw
xv
bx u
xt
xs
xr
xq
xp
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
b10000000000000000000000000000011 g
b1 f
1e
b0 d
1c
0b
bx a
b111100 `
bx _
bx ^
bx ]
x\
x[
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
xP
bx O
bx N
bx M
bx L
bx K
xJ
xI
bx H
xG
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
x:
x9
bx 8
x7
bx 6
bx 5
bx 4
b0 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bz &
x%
bz $
bz #
bz "
bz !
$end
#2000
b1000 .
b1000 ]%
b1000 d%
b100 C
b100 |"
b100 }"
b100 \%
b0 2
b0 z"
b0 l%
0L"
0j%
0k%
b0 O
b0 %"
b0 ;"
0J
07
1:
0I
0%
06"
0:"
b0 4
b0 9"
b0 r"
b0 5
b0 8"
b0 l"
b0 6
b0 7"
b0 f"
b10001010000000000000000000000000 1
b10001010000000000000000000000000 O"
b10001010000000000000000000000000 u%
0:$
07$
01$
0.$
0+$
0($
0%$
0"$
0}#
0z#
0w#
0t#
0n#
0k#
0h#
0e#
0b#
0_#
0\#
0Y#
0V#
0S#
0L$
0I$
0F$
0C$
0@$
0=$
04$
0q#
0P#
0M#
b0 t%
b0 =
b0 >"
b0 N"
0/"
b1000 R
b1000 l
b1000 u"
b1000 !#
b0 k
b0 ^
b0 m
b0 e"
b0 k"
b0 q"
b0 x"
b0 F
b0 i
b0 [%
b0 K#
b0 O$
0q
0r
0s
0t
0p
b0 u
b0 {
0x
0y
0z
0~
0}
0v
0w
b0 Z
b0 n
b0 $"
0|
b100 /
b100 {"
b100 e%
b0 D
b0 P"
b0 ~"
b0 A
b0 <"
b0 W"
b0 0
b0 o
b0 X"
b0 8
b0 S"
b0 ^%
b0 *
b0 4"
b0 M"
b0 U"
b0 &#
b0 V%
b0 (
b0 2"
b0 V"
b0 %#
b0 4%
b0 )
b0 3"
b0 Q"
b0 $#
b0 p$
0P
b0 Q
b0 T"
b0 N
b0 ="
b0 R"
b0 S
b0 G"
b0 T
b0 F"
b0 Z%
b0 U
b0 j
b0 E"
b0 V
b0 D"
b0 Y%
0\
b0 >
b0 )"
b0 5"
b0 H"
b0 W
b0 ("
b0 I"
b0 _
b0 h
b0 B"
b0 H
b0 C"
b0 X%
b0 B
b0 '"
b0 J"
b0 @
b0 ."
b0 Z"
b0 `"
b0 <
b0 ,"
b0 0"
b0 _"
0G
b0 E
b0 -"
b0 Y
b0 *"
b0 +"
09
b0 b"
b0 ;
b0 1"
b0 a"
b0 '#
b0 N$
1b
#3000
0c
0e
#4000
0b
#6000
b10000001000 O
b10000001000 %"
b10000001000 ;"
1~
b10000001000 Z
b10000001000 n
b10000001000 $"
1t
0:
1I
16"
1%
1:"
bx R
bx l
bx u"
bx !#
bx k
bx ^
bx m
bx e"
bx k"
bx q"
bx x"
b0 #"
b10 !"
b101 =
b101 >"
b101 N"
bz +"
bx S
bx G"
bx T
bx F"
bx Z%
bx U
bx j
bx E"
b10001010000000000000000000000000 0
b10001010000000000000000000000000 o
b10001010000000000000000000000000 X"
b101 8
b101 S"
b101 ^%
b101 *
b101 4"
b101 M"
b101 U"
b101 &#
b101 V%
b1010000000000000000000000000 Q
b1010000000000000000000000000 T"
1b
#8000
0b
#10000
bz K
bz ?"
bz t"
b1100 .
b1100 ]%
b1100 d%
b1000 C
b1000 |"
b1000 }"
b1000 \%
b1 4
b1 9"
b1 r"
b10000110101000001110000000000001 1
b10000110101000001110000000000001 O"
b10000110101000001110000000000001 u%
b100 t%
1/"
b1000 /
b1000 {"
b1000 e%
b100 D
b100 P"
b100 ~"
b101 >
b101 )"
b101 5"
b101 H"
b1000 W
b1000 ("
b1000 I"
b1 H
b1 C"
b1 X%
1b
#12000
0b
#14000
b0 O
b0 %"
b0 ;"
bx K
bx ?"
bx t"
b10000 .
b10000 ]%
b10000 d%
1p
b10 u
b1010011000001000 Z
b1010011000001000 n
b1010011000001000 $"
1q
1:
0I
06"
0%
0:"
b0 4
b0 9"
b0 r"
b1100 C
b1100 |"
b1100 }"
b1100 \%
b11000100000010000000000000000001 1
b11000100000010000000000000000001 O"
b11000100000010000000000000000001 u%
b10100 #"
b11 =
b11 >"
b11 N"
b1000 t%
b101 <
b101 ,"
b101 0"
b101 _"
1G
bz S
bz G"
b100 A
b100 <"
b100 W"
b10000110101000001110000000000001 0
b10000110101000001110000000000001 o
b10000110101000001110000000000001 X"
b11 8
b11 S"
b11 ^%
b11 *
b11 4"
b11 M"
b11 U"
b11 &#
b11 V%
b1 (
b1 2"
b1 V"
b1 %#
b1 4%
b11 )
b11 3"
b11 Q"
b11 $#
b11 p$
b110101000001110000000000001 Q
b110101000001110000000000001 T"
b1000001110000000000001 N
b1000001110000000000001 ="
b1000001110000000000001 R"
b1000 D
b1000 P"
b1000 ~"
b1100 /
b1100 {"
b1100 e%
1b
#16000
0b
#18000
b110001001100 O
b110001001100 %"
b110001001100 ;"
1}
1x
b0 u
0p
0q
b110001001100 Z
b110001001100 n
b110001001100 $"
1s
0:
1I
16"
1%
1:"
b11 6
b11 7"
b11 f"
1M#
b1 #"
b11 !"
b10 =
b10 >"
b10 N"
0/"
b10000011100000000000010000000000 F
b10000011100000000000010000000000 i
b10000011100000000000010000000000 [%
b1 K#
b1 O$
b1000 A
b1000 <"
b1000 W"
b11000100000010000000000000000001 0
b11000100000010000000000000000001 o
b11000100000010000000000000000001 X"
b10 8
b10 S"
b10 ^%
b10 *
b10 4"
b10 M"
b10 U"
b10 &#
b10 V%
b0 )
b0 3"
b0 Q"
b0 $#
b0 p$
b100000010000000000000000001 Q
b100000010000000000000000001 T"
b10000000000000000001 N
b10000000000000000001 ="
b10000000000000000001 R"
bx S
bx G"
b1000001110000000000001 V
b1000001110000000000001 D"
b1000001110000000000001 Y%
b11 >
b11 )"
b11 5"
b11 H"
b0 W
b0 ("
b0 I"
b0 H
b0 C"
b0 X%
b100 B
b100 '"
b100 J"
19
1b
#20000
0b
#22000
bz K
bz ?"
bz t"
b10100 .
b10100 ]%
b10100 d%
b1 4
b1 9"
b1 r"
b10000 C
b10000 |"
b10000 }"
b10000 \%
b11001010001010000110000000000001 1
b11001010001010000110000000000001 O"
b11001010001010000110000000000001 u%
1/"
b100000000000000000010000000000 F
b100000000000000000010000000000 i
b100000000000000000010000000000 [%
bz -
bz g"
bz J#
bz q$
b1100 t%
b100 @
b100 ."
b100 Z"
b100 `"
b11 <
b11 ,"
b11 0"
b11 _"
0G
b10000000000000000001 V
b10000000000000000001 D"
b10000000000000000001 Y%
b10 >
b10 )"
b10 5"
b10 H"
b1001100 W
b1001100 ("
b1001100 I"
b11 H
b11 C"
b11 X%
b1000 B
b1000 '"
b1000 J"
bz G#
bz N#
bz P$
bz r$
bz 6%
b1100 D
b1100 P"
b1100 ~"
b10000 /
b10000 {"
b10000 e%
1b
#24000
0b
#26000
b10110001100000 O
b10110001100000 %"
b10110001100000 ;"
bx K
bx ?"
bx t"
b11000 .
b11000 ]%
b11000 d%
b10100 C
b10100 |"
b10100 }"
b10100 \%
0~
1y
0}
b10110001100000 Z
b10110001100000 n
b10110001100000 $"
1q
b0 4
b0 9"
b0 r"
b0 6
b0 7"
b0 f"
b10010101111111111111111111110 1
b10010101111111111111111111110 O"
b10010101111111111111111111110 u%
0M#
b10000 t%
b101 #"
b101 =
b101 >"
b101 N"
bx -
bx g"
bx J#
bx q$
b0 K#
b0 O$
b10100 /
b10100 {"
b10100 e%
b10000 D
b10000 P"
b10000 ~"
b1100 A
b1100 <"
b1100 W"
b11001010001010000110000000000001 0
b11001010001010000110000000000001 o
b11001010001010000110000000000001 X"
b101 8
b101 S"
b101 ^%
b101 *
b101 4"
b101 M"
b101 U"
b101 &#
b101 V%
b1 )
b1 3"
b1 Q"
b1 $#
b1 p$
b1010001010000110000000000001 Q
b1010001010000110000000000001 T"
b1010000110000000000001 N
b1010000110000000000001 ="
b1010000110000000000001 R"
bz S
bz G"
b1000 @
b1000 ."
b1000 Z"
b1000 `"
b10 <
b10 ,"
b10 0"
b10 _"
1G
b100 E
b100 -"
b100 Y
b100 *"
09
b100 b"
1b
#28000
0b
#30000
x7
b10000000000000 O
b10000000000000 %"
b10000000000000 ;"
1J
b11100 .
b11100 ]%
b11100 d%
1v
0x
0y
0s
b1000010000000000000 Z
b1000010000000000000 n
b1000010000000000000 $"
0t
b11000 C
b11000 |"
b11000 }"
b11000 \%
1M#
b1011000011110000111100000110 1
b1011000011110000111100000110 O"
b1011000011110000111100000110 u%
b1 K#
b1 O$
0/"
b1 F
b1 i
b1 [%
b10 ""
b0 !"
b1001 =
b1001 >"
b1001 N"
b10100 t%
19
b1000 b"
bx S
bx G"
b1010000110000000000001 V
b1010000110000000000001 D"
b1010000110000000000001 Y%
b101 >
b101 )"
b101 5"
b101 H"
b1100000 W
b1100000 ("
b1100000 I"
b1011 H
b1011 C"
b1011 X%
b1100 B
b1100 '"
b1100 J"
b10000 A
b10000 <"
b10000 W"
b10010101111111111111111111110 0
b10010101111111111111111111110 o
b10010101111111111111111111110 X"
b1001 8
b1001 S"
b1001 ^%
b1001 *
b1001 4"
b1001 M"
b1001 U"
b1001 &#
b1001 V%
b11110 (
b11110 2"
b11110 V"
b11110 %#
b11110 4%
b11111 )
b11111 3"
b11111 Q"
b11111 $#
b11111 p$
b10010101111111111111111111110 Q
b10010101111111111111111111110 T"
b1111111111111111111110 N
b1111111111111111111110 ="
b1111111111111111111110 R"
b10100 D
b10100 P"
b10100 ~"
b11000 /
b11000 {"
b11000 e%
1b
#32000
0b
#34000
07
b111001000000001000 O
b111001000000001000 %"
b111001000000001000 ;"
0J
b100000 .
b100000 ]%
b100000 d%
b11100 C
b11100 |"
b11100 }"
b11100 \%
1~
0v
b1110 u
0q
b111001000000001000 Z
b111001000000001000 n
b111001000000001000 $"
1r
b1000000000000000000000000000100 1
b1000000000000000000000000000100 O"
b1000000000000000000000000000100 u%
b11000 t%
b100 ""
b101 =
b101 >"
b101 N"
bx F
bx i
bx [%
b11100 /
b11100 {"
b11100 e%
b11000 D
b11000 P"
b11000 ~"
b10100 A
b10100 <"
b10100 W"
b1011000011110000111100000110 0
b1011000011110000111100000110 o
b1011000011110000111100000110 X"
b101 8
b101 S"
b101 ^%
b101 *
b101 4"
b101 M"
b101 U"
b101 &#
b101 V%
b110 (
b110 2"
b110 V"
b110 %#
b110 4%
b11100 )
b11100 3"
b11100 Q"
b11100 $#
b11100 p$
b1011000011110000111100000110 Q
b1011000011110000111100000110 T"
b11110000111100000110 N
b11110000111100000110 ="
b11110000111100000110 R"
b1111111111111111111110 V
b1111111111111111111110 D"
b1111111111111111111110 Y%
b1001 >
b1001 )"
b1001 5"
b1001 H"
b0 W
b0 ("
b0 I"
b1000 H
b1000 C"
b1000 X%
b10000 B
b10000 '"
b10000 J"
b1100 @
b1100 ."
b1100 Z"
b1100 `"
b101 <
b101 ,"
b101 0"
b101 _"
0G
b0 E
b0 -"
b110 Y
b110 *"
1b
#36000
0b
#38000
b0 O
b0 %"
b0 ;"
b100100 .
b100100 ]%
b100100 d%
bz K
bz ?"
bz t"
bz M
bz A"
bz h"
b0 u
1w
0r
b100000001010 Z
b100000001010 n
b100000001010 $"
1s
1:
0I
06"
0%
0:"
b100000 C
b100000 |"
b100000 }"
b100000 \%
0M#
b10000001110000000000000000001111 1
b10000001110000000000000000001111 O"
b10000001110000000000000000001111 u%
b0 K#
b0 O$
1/"
b0 k
b11110000111100000110 ^
b11110000111100000110 m
b11110000111100000110 e"
b11110000111100000110 k"
b11110000111100000110 q"
b11110000111100000110 x"
b11110000111100000110 F
b11110000111100000110 i
b11110000111100000110 [%
b1 !"
b0 =
b0 >"
b0 N"
bz +
bz s"
bz H#
bz W%
bz -
bz g"
bz J#
bz q$
b11100 t%
09
b1100 b"
b10000 @
b10000 ."
b10000 Z"
b10000 `"
b1001 <
b1001 ,"
b1001 0"
b1001 _"
b0 Y
b0 *"
b11110000111100000110 V
b11110000111100000110 D"
b11110000111100000110 Y%
b101 >
b101 )"
b101 5"
b101 H"
b1000 W
b1000 ("
b1000 I"
b1110 _
b1110 h
b1110 B"
b100 H
b100 C"
b100 X%
b10100 B
b10100 '"
b10100 J"
b11000 A
b11000 <"
b11000 W"
b1000000000000000000000000000100 0
b1000000000000000000000000000100 o
b1000000000000000000000000000100 X"
b0 8
b0 S"
b0 ^%
b0 *
b0 4"
b0 M"
b0 U"
b0 &#
b0 V%
b100 (
b100 2"
b100 V"
b100 %#
b100 4%
b0 )
b0 3"
b0 Q"
b0 $#
b0 p$
b100 Q
b100 T"
b100 N
b100 ="
b100 R"
b11100 D
b11100 P"
b11100 ~"
b100000 /
b100000 {"
b100000 e%
1b
#40000
0b
#42000
0~
1|
0w
1r
0s
b1010000000001 Z
b1010000000001 n
b1010000000001 $"
1t
b0 4
b0 9"
b0 r"
b0 6
b0 7"
b0 f"
b111000 #"
b10 !"
0/"
bx k
bx ^
bx m
bx e"
bx k"
bx q"
bx x"
b1000000000000 F
b1000000000000 i
b1000000000000 [%
b11100 A
b11100 <"
b11100 W"
b10000001110000000000000000001111 0
b10000001110000000000000000001111 o
b10000001110000000000000000001111 X"
b1111 (
b1111 2"
b1111 V"
b1111 %#
b1111 4%
b1110000000000000000001111 Q
b1110000000000000000001111 T"
b1111 N
b1111 ="
b1111 R"
bz S
bz G"
bz U
bz j
bz E"
b100 V
b100 D"
b100 Y%
b0 >
b0 )"
b0 5"
b0 H"
b0 W
b0 ("
b0 I"
b0 _
b0 h
b0 B"
b0 H
b0 C"
b0 X%
b11000 B
b11000 '"
b11000 J"
b10100 @
b10100 ."
b10100 Z"
b10100 `"
b101 <
b101 ,"
b101 0"
b101 _"
1G
b10000 b"
1b
#44000
0b
#46000
bx K
bx ?"
bx t"
bx M
bx A"
bx h"
b11 4
b11 9"
b11 r"
b11 6
b11 7"
b11 f"
1M#
b1 K#
b1 O$
b11110000000000 F
b11110000000000 i
b11110000000000 [%
19
b10100 b"
b11000 @
b11000 ."
b11000 Z"
b11000 `"
b0 <
b0 ,"
b0 0"
b0 _"
0G
b1111 V
b1111 D"
b1111 Y%
b11100 B
b11100 '"
b11100 J"
1b
#48000
0b
#50000
bz K
bz ?"
bz t"
bz M
bz A"
bz h"
b0 4
b0 9"
b0 r"
b0 6
b0 7"
b0 f"
0M#
b0 K#
b0 O$
bx S
bx G"
bx U
bx j
bx E"
b11100 @
b11100 ."
b11100 Z"
b11100 `"
09
b11000 b"
1b
#52000
0b
#54000
b11100 b"
bz S
bz G"
bz U
bz j
bz E"
1b
#56000
0b
#58000
1b
#60000
0b
#62000
1b
